pipeline {

    agent any

    tools {
        maven 'Apache Maven 3.8.7'
    }

    environment {
        IMAGE_NAME = 'pradeep781/medicure:1.0'
        KUBECONFIG = '/path/to/kubeconfig'
    }

    stages {

        stage('Git Checkout') {
            steps {
                echo 'Cloning the Git repository'
                git branch: 'master', url: 'https://github.com/Pradeep-kumar11/star-agile-health-care.git'
            }
        }

        stage('Maven Build & Test') {
            steps {
                echo 'Building the application and running tests using Maven'
                sh 'mvn clean package test'
            }
        }

        stage('Test Results') {
            steps {
                echo 'Publishing test results'
                script {
                    try {
                        sh 'mvn surefire-report:report-only'
                        publishHTML([
                            reportDir: 'target/site/surefire-report',
                            reportFiles: 'index.html',
                            reportName: 'Test Report'
                        ])
                    } catch (Exception e) {
                        echo "Skipping test report: ${e.message}"
                    }
                }
            }
        }

        stage('Docker Build') {
            steps {
                echo 'Building Docker image'
                sh "docker build -t $IMAGE_NAME ."
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockercode', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    echo 'Logging in to DockerHub...'
                    script {
                        retry(3) {
                            try {
                                sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                            } catch (Exception e) {
                                echo "DockerHub login failed, retrying in 10 seconds..."
                                sleep 10
                                throw e
                            }
                        }
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to DockerHub'
                script {
                    retry(3) {
                        sh "docker push $IMAGE_NAME"
                    }
                }
            }
        }

        stage('Copy Inventory') {
            steps {
                echo 'Copying inventory file to Jenkins workspace'
                sh 'cp /var/lib/jenkins/inventory $WORKSPACE/'
            }
        }

        // âœ… Updated Ansible Playbook stage here
        stage('Run Ansible Playbook') {
            steps {
                echo 'Executing Ansible Playbook for deployment'
                withCredentials([sshUserPrivateKey(credentialsId: 'ec2-key', keyFileVariable: 'PRIVATE_KEY', usernameVariable: 'SSH_USER')]) {
                    sh 'cp /var/lib/jenkins/inventory $WORKSPACE/'
                    sh 'chmod 400 $PRIVATE_KEY'
                    sh """
                        ansible-playbook ansible-playbook.yml \
                        -i $WORKSPACE/inventory \
                        --private-key $PRIVATE_KEY \
                        -u $SSH_USER \
                        --become --ssh-common-args='-o StrictHostKeyChecking=no'
                    """
                }
            }
        }

    }

    post {
        success {
            echo 'Build and deployment completed successfully!'
        }
        failure {
            echo 'Build failed! Please check the logs.'
        }
    }
}
