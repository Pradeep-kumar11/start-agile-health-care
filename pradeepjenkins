pipeline {
    agent any

    tools {
        maven 'Apache Maven 3.8.7'   //maven//
    }

    environment {
        IMAGE_NAME = 'pradeep781/medicure:1.0'
        KUBECONFIG = '/path/to/kubeconfig'
    }

    stages {

        stage('Git Checkout') {
            steps {
                echo 'Cloning the Git repository'
                git branch: 'master', url: 'https://github.com/Pradeep-kumar11/star-agile-health-care.git'
            }
        }

        stage('Maven Build & Test') {
            steps {
                echo 'Building the application and running tests using Maven'
                sh 'mvn clean package test'
            }
        }

        stage('Docker Build') {
            steps {
                echo 'Building Docker image'
                script {
                    try {
                        sh "docker build -t $IMAGE_NAME ."
                    } catch (Exception e) {
                        echo "Docker build failed: ${e.message}"
                        throw e
                    }
                }
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockercode', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    echo 'Logging in to DockerHub...'
                    script {
                        retry(3) {
                            try {
                                sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                            } catch (Exception e) {
                                echo "DockerHub login failed, retrying in 10 seconds..."
                                sleep 10
                                throw e
                            }
                        }
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to DockerHub'
                script {
                    retry(3) {
                        try {
                            sh "docker push $IMAGE_NAME"
                        } catch (Exception e) {
                            echo "Docker push failed: ${e.message}"
                            throw e
                        }
                    }
                }
            }
        }

        // Removed the 'Copy Inventory' stage
        // Since the inventory file is already in the Git repository, we don't need to copy it

        stage('Deploy Using Ansible') {
            steps {
                echo 'Deploying application using Ansible playbook...'
                script {
                    try {
                        ansiblePlaybook(
                            become: true,
                            credentialsId: 'ansible',
                            disableHostKeyChecking: true,
                            installation: 'ansible',
                            inventory: '/etc/ansible/hosts',
                            playbook: 'ansible-playbook.yml'
                        )
                    } catch (Exception e) {
                        echo "Ansible playbook execution failed: ${e.message}"
                        throw e
                    }
                }
            }
        }

    }

    post {
        success {
            echo 'Build and deployment completed successfully!'
        }
        failure {
            echo 'Build failed! Please check the logs.'
        }
    }
}
